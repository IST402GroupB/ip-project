import{s as t,r as e,$ as s}from"./aa05e036.js";import{U as i}from"./4c5e5b97.js";class o extends t{static get tag(){return"location-from-ip"}constructor(){super(),this.UserIpInstance=new i,this.locationEndpoint="https://freegeoip.app/json/",this.long=null,this.lat=null}static get properties(){return{long:{type:Number,reflect:!0},lat:{type:Number,reflect:!0},city:{type:String,reflect:!0},region_name:{type:String,reflect:!0}}}firstUpdated(t){super.firstUpdated&&super.firstUpdated(t),this.getGEOIPData()}async getGEOIPData(){const t=new i,e=await t.updateUserIP();return fetch(this.locationEndpoint+e.ip).then((t=>!!t.ok&&t.json())).then((t=>(console.log(t),this.lat=t.latitude,this.long=t.longitude,this.city=t.city,this.state=t.region_name,t)))}static get styles(){return[e`:host{display:block}iframe{height:500px;width:500px}`]}render(){const t=`https://maps.google.com/maps?q=${this.lat},${this.long}&t=&z=15&ie=UTF8&iwloc=&output=embed`;return s`<iframe title="Where you are" src="${t}"></iframe> <ul> <a href="https://www.google.com/maps/@${this.lat},${this.long},14z"> Open in Google Maps </a> console.log(${this.city} ${this.state}) </ul>`}}customElements.define(o.tag,o);
